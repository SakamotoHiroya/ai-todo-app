openapi: 3.0.0
info:
  title: Todo Application API
  version: 1.0.0
  description: API specification for a simple Todo application.
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /api/auth/google:
    get:
      summary: Start Google Authentication
      operationId: startGoogleAuth
      responses:
        '302':
          description: Redirect to Google OAuth 2.0 login
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /api/auth/google/callback:
    get:
      summary: Google Authentication Callback
      operationId: googleAuthCallback
      responses:
        '200':
          description: Authentication success
        '401':
          description: Authentication failed
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /api/auth/logout:
    post:
      summary: Logout
      operationId: logout
      responses:
        '204':
          description: Logout successful
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /api/tasks:
    get:
      summary: Get list of tasks
      operationId: getTasks
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - cookieAuth: []
    post:
      summary: Create a new task
      operationId: createTask
      requestBody:
        description: Task details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /api/tasks/{id}:
    put:
      summary: Update an existing task
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Updated task details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - cookieAuth: [ ]
    delete:
      summary: Delete a task
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /api/tasks/{id}/toggle:
    patch:
      summary: Toggle task completion state
      operationId: toggleTaskCompletion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task completion state toggled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - cookieAuth: [ ]
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
          nullable: true
        completed:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    TaskInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session

security:
  - cookieAuth: []
